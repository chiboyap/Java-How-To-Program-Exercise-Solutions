3.5	
The new keyword in java is used to create an instance of a class. When it is called, it allocates memory for a new object and passes a reference to that memory.

3.6
Default constructors are constructors generated by default by a compiler when constructors are not defined.

3.7
Instance variables are variables defined within a class outside methods. They are created when an object of a class is created and each object of the class has its own copy of instance variables.

3.8
Apps use classes System and String without first importing because they are implicity imported in every Java program in the package java.lang.package.

3.9
Scanner can be use without importing the package if it is used with its full name java.util.Scanner.

3.10
Usually instance variables can only be accessed by methods of the class to which it belongs. Having set and get methods provide a means of manipulating the instance variables outside the class.

3.11
import java.util.Scanner;
public class Account{
	public void withdraw(int withdrawAmount){
		if (withdrawAmount > balance){
			print("Withdrawal amount exceeded account balance");
		}
		else{
			balance = balance - withdrawAmount;
		} } }
public AccountTest{
	public static void main(String[] args){
		Account account = Account(Tanyi, 100.0)
		double withdrawalAmount;
		Scanner input = new Scanner(System.in);
		
		System.out.println("Enter amount to be withdrawn: ");
		withdrawalAmount = input.nextDouble();
		account.withdraw(withdrawalAmount);
}}

3.12
public class Invoice{
	String partNumber;
	String partDescription;
	int quantity;
	double pricePerItem;

	public Invoice(String partNum, String partDesc, int qty, double price){
		partNUmber = partnum;
		partDescription = partDesc;
		quantity = qty;
		pricePerItem = price;
	}
	public void setPartNum(String partnum){
		partnumber = partNum;
	}
	public String getPartNum(){
		return partNumber;
	}
	public void setDesc(String partDesc){
		partDescription partDesc;
	}
	public String getDesc(){
		return partDescription;
	}
	public void setqty(int qty){
		quantity = qty;
		if (quantity<0){quantity=0}
	}
	public int getqty(){
		return quantity;
	}
	public void setprice(double price){
		pricePerItem = price;
		if (pricePeritem<0){pricePerItem=0}
	}
	public double getPrice(){
		return pricePerItem;
	}
	public double getInvoiceAmount(int quantity, double pricePerItem){
		return pricePerItem * quantity;
	}
}

3.13
public Class Employee{
	String firstName;
	String lastName;
	double monthlySalary;

	public Employee(String firstName, String lastName, double monthlySalary){
		this.firstName  = firstName;
		this.lastName = lastName;
		if (monthlySalary > 0.0)
			this.monthlySalary = monthlySalary;
	}
	public void setFirstName(String firstName){
		this.firstName = firstName;
	}
	public String getFirstName(){
		return firstName;
	}
	public void setLastName(String lastName){
		this.lastName = lastName;
	}
	public String getLastName(){
		return lastName;
	}
	public void setMonthlySalary(double monthlySalary){
		this.monthlySalary = monthlySalary;
	}
	public double getMonthlySalary(){
		return monthlySalary;
	}
}

import java.util.Scanner;
public class EmployeeTest{
	public static void main( String[] args){
		Employee employee1 = new Employee();
		Employee employee2 = new Employee();
		String fname, lname;
		double salary;
		
		Scanner input = new Scanner(System.in);
		
		System.out.println("Enter first employee/'s first name:");
		fname = input.next;
		employee1.setFirstName(fname);
		System.out.println("Enter first employee/'s last name:");
		lname = input.next();
		employee1.setLastName(lname);
		System.out.println("Enter first employee's monthl salary:");
		salary = input.nextDouble();
		employee1.setMonthlySalary(salary);

		System.out.println("Enter second employee/'s first name:");
		fname = input.next;
		employee2.setFirstName(fname);
		System.out.println("Enter second employee/'s last name:");
		lname = input.next();
		employee2.setLastName(lname);
		System.out.println("Enter second employee's monthl salary:");
		salary = input.nextDouble();
		employee2.setMonthlySalary(salary);

		//displaying 2 employees' yearly salaries
		System.out.println("First employee/'s annual salary is ", (employee1.getMonthlySalary()*12));
		System.out.println("First employee/'s annual salary is ", (employee2.getMonthlySalary()*12));

		//displaying annual salaries after 10% raise
		salary = employee1.getMonthlySalary();
		newAnnSalary1 = salary * (10/100) * 12;
		System.out.println("First employee/'s new annual salary is "+ newAnnSalary1);
		salary = employee2.getMonthlySalary();
		newAnnSalary2 = salary * (10/100) * 12;
		System.out.println("Second employee/'s new annual salary is "+ newAnnSalary2);
	}
}
 3.14
import java.util.Scanner;
public class AccountTest {
	public static void main(String[] args) {

	Account account1 = new Account("Jane Green", 50.00);
        Account account2 = new Account("John Blue", -7.53);

        // display initial balance of each object
        System.out.printf("%s balance: $%.2f%n", account1.getName(), account1.getBalance());
        System.out.printf("%s balance: $%.2f%n%n", account2.getName(), account2.getBalance());

        // create a Scanner to obtain input from the command window
        Scanner input = new Scanner(System.in);

	// 1 - Deposit
        System.out.print("Enter deposit amount for account1: ");
        double depositAmount = input.nextDouble();
        System.out.printf("%nadding %.2f to account1 balance%n%n",depositAmount);
        account1.deposit(depositAmount);

        // View
	displayAccount(account1);
	displayAccount(account2);

	// 1 - Withdraw
        System.out.print("Enter withdrawal amount for account1: ");
        double withdrawalAmount = input.nextDouble();
        System.out.printf("%nwithdrawing %.2f from account1 balance%n%n", withdrawalAmount);
        account1.withdraw(withdrawalAmount);

        // View
	displayAccount(account1);
	displayAccount(account2);

	// 2 - Deposit
        System.out.print("Enter deposit amount for account2: ");
        depositAmount = input.nextDouble();
        System.out.printf("%nadding %.2f to account2 balance%n%n", depositAmount);
        account2.deposit(depositAmount);

        // View
	displayAccount(account1);
	displayAccount(account2);

	// 2 - Withdraw
        System.out.print("Enter withdrawal amount for account2: ");
        withdrawalAmount = input.nextDouble();
        System.out.printf("%nwithdrawing %.2f from account2 balance%n%n", withdrawalAmount);
        account2.withdraw(withdrawalAmount);

        // View
	displayAccount(account1);
	displayAccount(account2);

   }

        public static void displayAccount(Account acc) {
        	System.out.printf("%s balance: $%.2f%n",
         	acc.getName(), acc.getBalance());
   }
}
